export JAVA_HOME=/opt/jdk1.8.0_65
export TOMCAT_HOME=/opt/apache-tomcat-7.0.67
export CATALINA_HOME=/opt/apache-tomcat-7.0.67
export MAVEN_HOME=/opt/apache-maven-3.3.9
export M2_HOME=/opt/apache-maven-3.3.9
export ZOOKEEPER_HOME=/opt/zookeeper-3.4.7
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
export PATH=$PATH:$JAVA_HOME/bin:$MAVEN_HOME/bin:$CATALINA_HOME/bin

Ubuntu Linux 环境变量PATH设置
0人收藏此文章，收藏此文章 发表于2小时前 , 已有2次阅读 共0个评论0人收藏此文章
Ubuntu Linux系统环境变量配置文件： 
/etc/profile : 在登录时,操作系统定制用户环境时使用的第一个文件 ,此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行。 

/etc /environment : 在登录时操作系统使用的第二个文件, 系统在读取你自己的profile前,设置环境文件的环境变量。 

~/.profile :  在登录时用到的第三个文件 是.profile文件,每个用户都可使用该文件输入专用于自己使用的shell信息,当用户登录时,该文件仅仅执行一次!默认情况下,他设置一些环境变量,执行用户的.bashrc文件。

/etc/bashrc : 为每一个运行bash shell的用户执行此文件.当bash shell被打开时,该文件被读取. 

~/.bashrc : 该文件包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时,该该文件被读取。 

Linux中环境变量包括系统级和用户级，系统级的环境变量是每个登录到系统的用户都要读取的系统变量，而用户级的环境变量则是该用户使用系统时加载的环境变量。
所以管理环境变量的文件也分为系统级和用户级的，下面贴一个网上找到的讲的比较明白的文件介绍（略作修改）[1]：

1.系统级：
（1）/etc/profile：该文件是用户登录时，操作系统定制用户环境时使用的第一个文件，应用于登录到系统的每一个用户。该文件一般是调用/etc/bash.bashrc文件。
/etc/bash.bashrc：系统级的bashrc文件。
（2）/etc/environment:在登录时操作系统使用的第二个文件,系统在读取你自己的profile前,设置环境文件的环境变量。

2.用户级（这些文件处于家目录下）：
（1）~/.profile:每个用户都可使用该文件输入专用于自己使用的shell信息,当用户登录时,该文件仅仅执行一次!默认情况下,他设置一些环境变量,执行用户的.bashrc文件。这里是推荐放置个人设置的地方
（2）~/.bashrc:该文件包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时,该该文件被读取。不推荐放到这儿，因为每开一个shell，这个文件会读取一次，效率肯定有影响。
~/.bash_profile or ~./bash_login：这里没有引用作者的，下面会提到
~/.pam_environment:用户级的环境变量设置文件，没有做测试，不知道管不管用。


通过上面的文件介绍，就能明白我们需要设置环境变量的时候，需要修改什么文件，要想对所有的用户生效，那就需要设置系统级的环境变量。反之，需要修改用户级的文件（最好是修改.profile文件，理由上面已经讲了）。
另外，我使用的是Ubuntu10.04，之前在查找资料设置用户级环境变量的时候，有资料说要修改~.bash_profile文件，但是在ubuntu10.04系统中是没有该文件。经查找，在ubuntu官网[2]上找到了这个文件的说明：

~/.bash_profile or ~./bash_login - If one of these file exist, bash executes it rather then "~/.profile" when it is started as a login shell. (Bash will prefer "~/.bash_profile" to "~/.bash_login"). However, these files won't influence a graphical session by default.

意思应该是说当这个文件存在时，在登录shell时会读取./bash_profile文件，而不是.profile文件。我认为该文件实现的目的 跟.profile文件是一样的，当查找的资料中需要你修改.bash_profile文件，但却你没有该文件的时候，也可以修改.profile来完成 实现。



PASH环境变量的设置方法： 

方法一：用户主目录下的.profile或.bashrc文件（推荐） 

登录到你的用户（非root），在终端输入： 
$ sudo gedit ~/.profile(or .bashrc) 
可以在此文件末尾加入PATH的设置如下： 
export PATH=”$PATH:your path1:your path2 ...” 
保存文件，注销再登录，变量生效。 
该方式添加的变量只对当前用户有效。 

方法二：系统目录下的profile文件（谨慎） 

在系统的etc目录下，有一个profile文件，编辑该文件： 
$ sudo gedit /etc/profile 
在最后加入PATH的设置如下： 
export PATH=”$PATH:your path1:your path2 ...” 
该文件编辑保存后，重启系统，变量生效。 
该方式添加的变量对所有的用户都有效。 

方法三：系统目录下的 environment 文件（谨慎） 

在系统的etc目录下，有一个environment文件，编辑该文件： 
$ sudo gedit /etc/environment 
找到以下的 PATH 变量： 
PATH="<......>" 
修改该 PATH 变量，在其中加入自己的path即可，例如： 
PATH="<......>:your path1:your path2 …" 
各个path之间用冒号分割。该文件也是重启生效，影响所有用户。 
注意这里不是添加export PATH=… 。 

方法四：直接在终端下输入 

$ sudo export PATH="$PATH:your path1:your path2 …" 
这种方式变量立即生效，但用户注销或系统重启后设置变成无效，适合临时变量的设置。 


注 意：方法二和三的修改需要谨慎，尤其是通过root用户修改，如果修改错误，将可能导致一些严重的系统错误。因此笔者推荐使用第一种方法。另外嵌入式 Linux的开发最好不要在root下进行（除非你对Linux已经非常熟悉了！！），以免因为操作不当导致系统严重错误。

下面是一个对environment文件错误修改导致的问题以及解决方法示例： 

问题：因为不小心在 etc/environment里设在环境变量导致无法登录 
提示：不要在 etc/environment里设置 export PATH这样会导致重启后登录不了系统 
解决方法： 
在登录界面 alt +ctrl+f1进入命令模式，如果不是root用户需要键入（root用户就不许这么罗嗦，gedit编辑会不可显示） 
/usr/bin/sudo /usr/bin/vi /etc/environment 
光标移到export PATH** 行，连续按 d两次删除该行； 
输入:wq保存退出； 
然后键入/sbin/reboot重启系统（可能会提示need to boot，此时直接power off）
